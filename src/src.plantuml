@startuml

title __SRC's Class Diagram__\n

  namespace  {
    class AiJaap {
        + AiJaap()
        + bepaalVolgendeZet()
        - bepaalMogelijkZettenVoorSpeler()
    }
  }
  

  namespace  {
    class Game {
        - HISTORY : ArrayList<Speelveld>
        - beurt : boolean
        + Game()
        + bepaalWinnaar()
        {static} + main()
        + run()
    }
  }
  

  namespace  {
    class Koning {
        + Koning()
        + toString()
        + updateMogelijkeZetten()
    }
  }
  

  namespace  {
    class Koningin {
        + Koningin()
        + toString()
        + updateMogelijkeZetten()
    }
  }
  

  namespace  {
    class Loper {
        + Loper()
        + toString()
        + updateMogelijkeZetten()
    }
  }
  

  namespace  {
    class Mens {
        + Mens()
        + bepaalVolgendeZet()
    }
  }
  

  namespace  {
    class Paard {
        + Paard()
        + toString()
        + updateMogelijkeZetten()
    }
  }
  

  namespace  {
    class Pion {
        + Pion()
        + magPromoveren()
        + toString()
        + updateMogelijkeZetten()
    }
  }
  

  namespace  {
    class Speelveld {
        - STUKKEN : Stuk[][]
        - winnaar : String
        + Speelveld()
        + Speelveld()
        + checkGameOver()
        + checkSpelerMagGekozenStukBewegen()
        + creeerStukken()
        + getSTUKKEN()
        + getWinnaar()
        + move()
        + printVeld()
        + stukMagNaarGekozenVeld()
        + updateAlleMogelijkeZetten()
        - controleerPromotie()
        - copyArray()
    }
  }
  

  namespace  {
    class SpeelveldTest {
        + promotieTestWIT()
        + promotieTestZWART()
    }
  }
  

  namespace  {
    interface Speler {
        {abstract} + bepaalVolgendeZet()
    }
  }
  

  namespace  {
    abstract class Stuk {
        # KLEUR : boolean
        # kolom : int
        # rij : int
        + Stuk()
        + getKLEUR()
        + magPromoveren()
        + setCoordinaten()
        {abstract} + toString()
        {abstract} + updateMogelijkeZetten()
    }
  }
  

  namespace  {
    class StukTest {
        + pionTestTweePlekkenMogelijkOpEersteRij()
        + updateMogelijkeZettenKONING()
        + updateMogelijkeZettenKoningin()
        + updateMogelijkeZettenLoper()
        + updateMogelijkeZettenPaard()
        + updateMogelijkeZettenToren()
    }
  }
  

  namespace  {
    class Toren {
        + Toren()
        + toString()
        + updateMogelijkeZetten()
    }
  }
  

  namespace  {
    class Zet {
        - EINDKOLOM : int
        - EINDRIJ : int
        - STARTKOLOM : int
        - STARTRIJ : int
        + Zet()
        + getEINDKOLOM()
        + getEINDRIJ()
        + getSTARTKOLOM()
        + getSTARTRIJ()
        + toString()
    }
  }
  

  AiJaap .up.|> Speler
  Koning -up-|> Stuk
  Koningin -up-|> Stuk
  Loper -up-|> Stuk
  Mens .up.|> Speler
  Paard -up-|> Stuk
  Pion -up-|> Stuk
  Toren -up-|> Stuk


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
